===========================
401.2 MFA Policy Governance
===========================

-------------------
Learning Objectives
-------------------

* Use Grouper policy to control Shibboleth MFA behavior
* Create `eduPersonEntitlement` value to represent desired MFA behavior
* Evolve digital policy to match changing natural language policy

--------------
Lab Components
--------------

* Shibboleth
* Grouper
* PSPNG
* OpenLDAP
* eduPerson schema - `eduPersonEntitlement`
* REFEDS MFA profile
* `Grouper Deployment Guide <https://spaces.at.internet2.edu/display/Grouper/Grouper+Deployment+Guide+Work+-TIER+Program>`_

--------
Overview
--------

Your institution is deploying multi-factor authentication (MFA). The first
target application is Web SSO. Any account enabled for MFA will experience
common MFA behaviors sufficient to assert the REFEDS MFA profile during 
WebSSO authentication. The project plan calls for an initial pilot phase,
followed by a number phases where different cohorts will be required or
may opt-in. During the initial pilot phase, select cohorts will be asked to
volunteer. Your mission, should you choose to accept, is to create and evolve
the digital policy necessary to achieve the project goals.

----------------
Exercise 401.2.1
----------------

*Create initial MFA application folder set and policy in Grouper*

#. Create `app:mfa:mfa_enabled|allow|deny`.
#. Create `app:mfa:ref:pilot`.  This reference group is an access control
   list (ACL) as opposed to ABAC policy.
#. Add `app:mfa:ref:pilot` to `app:mfa:mfa_enabled_allow`.


----------------
Exercise 401.2.2
----------------

*Establish an eduPersonEntitlement value to signal "MFA enabled"*

We will assign a unique `eduPersonEntitilement` (ePE) value to LDAP accounts
that are MFA enabled.  We choose the value 
**http://tier.internet2.edu/mfa/enabled**.

There are 2 steps to accomplish this:

#. Assign PSPNG attribute to `app:mfa:mfa_enabled` with a value of
   `pspng_entitlements`.
#. Configure PSPNG to provision this attribute.

   .. literalinclude:: examples/401.2.2-pspng-config.proprties
        :language: properties
        :lines: 92-100
        :caption: grouper-loader.properties
        :name: 401.2.2-pspng-groupofnames
        :linenos:

----------------
Exercise 401.2.3
----------------

*Configure Shibboleth IdP to honor MFA enabled ePE value and assert REFEDS
MFA profile*

.. literalinclude:: examples/401.2.3-general-authn.xml
   :language: xml
   :emphasize-lines: 14, 16
   :lines: 112-130
   :caption: mfa-authn-config.xml
   :linenos:

.. literalinclude:: examples/401.2.3-mfa-authn-config.xml
   :language: xml
   :emphasize-lines: 25
   :lines: 53-86
   :caption: mfa-authn-config.xml
   :linenos:

Now have a working MFA policy. Adding new volunteers to the pilot is as easy as
adding members to the pilot group. The next rollout phase calls for onboarding
select departments, but allow for exceptions.

----------------
Exercise 401.2.4
----------------

*Onboard select departments, but allow for exceptions*

#. Add `ref:dept:its` to `app:mfa:mfa_enabled_allow`.
#. Add `app:mfa:ref:mfa_bypass` to `app:mfa:mfa_enabled_deny`.  Add [NetID] to
   `mfa_bypass` to exclude from `mfa_enabled`.
#. Athletics departement

   * You don't have a reference group, but you were provided a list of subject IDs:

     .. literalinclude:: examples/401.2.4-athletics-dept.txt
        :language: text 
        :caption: Athletics Department
        :linenos:

   * Import the list as a temporary app-specific reference group.
   * Add this reference group to `mfa_enabled_allow`.

The MFA pilot is going well when the institution is hit with some direct deposit
fraud. Mandate comes from leadership to add some required cohorts. The new
policy is "any non-faculty who has access to sensitive data (i.e. Banner
INB) must have mfa enabled". The new policy should be active within two days.


----------------
Exercise 401.2.5
----------------

*Update policy to include all non-faculty employees who have access to sensitive data in Banner*

The Banner support team provides a list of NetIDs to satisfy the "non-faculty
who have access to sensitive data in Banner" part of the policy.

#. Create `app:mfa:ref:NonFacultyBannerINB` and import list of NetIDs.
#. Add `NonFacultyBannerINB` to `app:mfa:mfa_enabled_allow`.  Edit the start
   date for this group to be in the future.
#. Use :ref:`SQL <apdx-401.2.5-future-memberships-query>` to view memberships
   enabled in the future.


